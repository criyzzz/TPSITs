import java.util.ArrayList;
import java.util.Collections;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

class Video {
    String name;
    int duration;

    public Video(String name, int duration) {
        this.name = name;
        this.duration = duration;
    }
}

public class VideoPlayer {

    private ArrayList<Video> playlist;
    private ScheduledExecutorService executor;
    private int currentIndex;

    public VideoPlayer(ArrayList<Video> playlist) {
        this.playlist = playlist;
        this.executor = Executors.newSingleThreadScheduledExecutor();
        this.currentIndex = 0;
    }

    public void startPlayback() {
        Collections.shuffle(playlist); // Shuffle the playlist to play videos in a random order
        scheduleNextVideo();
    }

    private void scheduleNextVideo() {
        if (currentIndex < playlist.size()) {
            Video currentVideo = playlist.get(currentIndex);
            System.out.println("Playing video: " + currentVideo.name + " for " + currentVideo.duration + " minutes");

            executor.schedule(() -> {
                System.out.println("Stopping video: " + currentVideo.name);
                currentIndex++;
                scheduleNextVideo();
            }, currentVideo.duration, TimeUnit.MINUTES);
        } else {
            executor.shutdown();
            System.out.println("All videos played.");
        }
    }

    public static void main(String[] args) {
        // Example usage
        ArrayList<Video> playlist = new ArrayList<>();
        playlist.add(new Video("Video1", 30));
        playlist.add(new Video("Video2", 10));

        VideoPlayer videoPlayer = new VideoPlayer(playlist);
        videoPlayer.startPlayback();
    }
}
